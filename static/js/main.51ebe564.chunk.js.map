{"version":3,"sources":["components/Header/Header.module.scss","components/CreatePost/CreatePost.module.scss","pages/Home/Home.module.scss","components/Footer/Footer.module.scss","components/FriendPreview/FriendPreview.module.scss","components/MessagePreview/MessagePreview.module.scss","components/Post/Post.module.scss","components/Header/index.jsx","components/Footer/index.jsx","libs/http.js","components/CreatePost/index.jsx","components/FriendPreview/index.jsx","components/MessagePreview/index.jsx","components/Post/index.jsx","pages/Home/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","props","name","links","link","label","CheckActive","resolved","useResolvedPath","useMatch","path","pathname","end","styles","active","className","header","map","item","index","to","Footer","year","Date","getFullYear","footer","BASE_URL","http","resource","fetch","then","response","json","CreatePost","useState","authorInput","setAuthorInput","imgInput","setImgInput","messageInput","setMessageInput","formPostObj","setFormPostObj","useEffect","author","text","date","toISOString","photo","createPost","__author","value","onChange","e","target","id","type","placeholder","required","onClick","event","data","preventDefault","method","headers","body","JSON","stringify","alert","cols","rows","FriendPreview","friend","src","alt","MessagePreview","sender","message","formatDistance","addSuffix","locale","it","Post","post","friends","messages","posts","Home","friendsPreview","setFriendsPreview","allPosts","setAllPosts","messagesPreview","setMessagesPreview","home","grid","INIT_STATE","nav","reducer","state","action","App","useReducer","dispatch","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51ebe564.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\",\"active\":\"Header_active__3GX0s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createPost\":\"CreatePost_createPost__3XCbM\",\"__author\":\"CreatePost___author__2lcbm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__1JXvv\",\"grid\":\"Home_grid__sUtIT\",\"friend\":\"Home_friend__eOEhP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__7dIj9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"FriendPreview_friend__3Gjby\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"MessagePreview_message__3j9dl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3hqZB\"};","import { Link, useMatch, useResolvedPath } from \"react-router-dom\";\nimport styles from \"./Header.module.scss\";\n\nconst Header = (props) => {\n  const name = props.name || \"App\";\n  const links = props.links || [{ link: \"/\", label: \"Link\" }];\n\n  /* Versione \"custom\", si puÃ² ottenere lo stesso risultato anche solamente\n  usando il componente NavLink\n  https://reactrouter.com/docs/en/v6/api#navlink */\n  const CheckActive = (link) => {\n    const resolved = useResolvedPath(link);\n    const match = useMatch({ path: resolved.pathname, end: true });\n\n    return match ? styles.active : \"\";\n  };\n\n  return (\n    <header className={styles.header}>\n      <h1>{name}</h1>\n      <nav>\n        <ul>\n          {links.map((item, index) => (\n            <li key={index}>\n              <Link className={CheckActive(item.link)} to={item.link}>\n                {item.label}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import styles from \"./Footer.module.scss\";\n\nconst Footer = () => {\n  const year = new Date().getFullYear();\n\n  return (\n    <footer className={styles.footer}>\n      <hr />\n      <p>Copyright Edgemony {year}</p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","const BASE_URL = \"https://edgemony-backend.herokuapp.com\";\n\nconst http = (resource) =>\n  fetch(BASE_URL + resource).then((response) => response.json());\n\nconst httpPOST = (resource, data) =>\n  fetch(BASE_URL + resource, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then((response) => response.json());\n\nexport { http, httpPOST };\n","import { useState, useEffect } from \"react\";\nimport { httpPOST } from \"../../libs/http\";\nimport styles from \"./CreatePost.module.scss\";\n\nconst CreatePost = () => {\n  const [authorInput, setAuthorInput] = useState(\"\");\n  const [imgInput, setImgInput] = useState(\"\");\n  const [messageInput, setMessageInput] = useState(\"\");\n  const [formPostObj, setFormPostObj] = useState({});\n\n  const handleSendBtn = (event) => {\n    event.preventDefault();\n    httpPOST(\"/posts\", formPostObj);\n    alert(\"Il post `e stato creato!\");\n  };\n\n  useEffect(() => {\n    setFormPostObj({\n      author: authorInput,\n      text: messageInput,\n      date: new Date().toISOString(),\n      photo: imgInput,\n    });\n  }, [authorInput, imgInput, messageInput]);\n\n  return (\n    <div className={styles.createPost}>\n      <form>\n        <div className={styles.__author}>\n          <input\n            value={authorInput}\n            onChange={(e) => setAuthorInput(e.target.value)}\n            name=\"author\"\n            id=\"author\"\n            type=\"text\"\n            placeholder=\"Author\"\n            required\n          />\n\n          <input\n            onChange={(e) => setImgInput(e.target.value)}\n            value={imgInput}\n            name=\"img\"\n            id=\"img\"\n            type=\"text\"\n            placeholder=\"Img URL\"\n          />\n\n          <button type=\"submit\" onClick={handleSendBtn}>\n            SEND\n          </button>\n        </div>\n\n        <textarea\n          value={messageInput}\n          onChange={(e) => setMessageInput(e.target.value)}\n          name=\"message\"\n          id=\"message\"\n          cols=\"30\"\n          rows=\"10\"\n          placeholder=\"Message\"\n          required\n        ></textarea>\n      </form>\n    </div>\n  );\n};\n\nexport default CreatePost;\n","import styles from \"./FriendPreview.module.scss\";\n\nconst FriendPreview = (props) => {\n  const data = props.data || {\n    name: \"Friend\",\n    photo: \"https://randomuser.me/api/portraits/women/59.jpg\",\n  };\n\n  return (\n    <div className={styles.friend}>\n      <img src={data.photo} alt={data.name} />\n      <p>{data.name}</p>\n    </div>\n  );\n};\n\nexport { FriendPreview };\n","import { formatDistance } from \"date-fns\";\nimport { it } from \"date-fns/locale\";\nimport styles from \"./MessagePreview.module.scss\";\n\nconst MessagePreview = (props) => {\n  const data = props.data || {\n    text: \"lorem ipsum\",\n    date: new Date(),\n    sender: \"User\",\n  };\n\n  return (\n    <div className={styles.message}>\n      <h5>{data.sender}</h5>\n      <p>\n        <small>\n          {formatDistance(new Date(data.date), new Date(), {\n            addSuffix: true,\n            locale: it,\n          })}\n        </small>\n      </p>\n      <p>{data.text}</p>\n    </div>\n  );\n};\n\nexport { MessagePreview };\n","import { formatDistance } from \"date-fns\";\nimport { it } from \"date-fns/locale\";\nimport styles from \"./Post.module.scss\";\n\nconst Post = (props) => {\n  const data = props.data || {\n    author: \"User\",\n    text: \"text\",\n    date: new Date(),\n    photo:\n      \"https://images.unsplash.com/photo-1639512398860-be15f48100ea?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1024&q=80\",\n  };\n\n  // const hasImage = (photo) => {\n  //   if(photo) {\n  //     return <img src={data.photo} alt={data.author} />\n  //   } else {\n  //     return <></>\n  //   }\n  // }\n\n  return (\n    <article className={styles.post}>\n      <h3>{data.author}</h3>\n      <p>\n        <small>\n          {formatDistance(new Date(data.date), new Date(), {\n            addSuffix: true,\n            locale: it,\n          })}\n        </small>\n      </p>\n      <p>{data.text}</p>\n\n      {data.photo ? <img src={data.photo} alt={data.author} /> : <></>}\n\n      {/*\n      Per gestire condizioni piÃ¹ complesse posso richiamare una funzione \n      \n      hasImage(data.photo) \n      */}\n    </article>\n  );\n};\n\nexport { Post };\n","import { useState, useEffect } from \"react\";\nimport { FriendPreview } from \"../../components/FriendPreview\";\nimport { MessagePreview } from \"../../components/MessagePreview\";\nimport { Post } from \"../../components/Post\";\nimport { http } from \"./../../libs/http\";\nimport styles from \"./Home.module.scss\";\n\nconst friends = [];\n\nconst messages = [];\n\nconst posts = [];\n\nconst Home = () => {\n  const [friendsPreview, setFriendsPreview] = useState(friends);\n  const [allPosts, setAllPosts] = useState(posts);\n  const [messagesPreview, setMessagesPreview] = useState(messages);\n\n  // GETTER -> const friendPreview = [];\n  // SETTER -> friendPreview = [...]\n\n  // Esegui del codice quando il componente Ã¨ inizializzato (montato in pagina)\n  // componentDidMount() --> simile a \"DOMContentLoaded\" ma solo per il componente\n  useEffect(() => {\n    // fetch(\"https://edgemony-backend.herokuapp.com/friends?_limit=4\")\n    //   .then((response) => response.json())\n    //   .then((data) => setFriendsPreview(data));\n\n    http(\"/friends?_limit=4\").then((data) => setFriendsPreview(data));\n    http(\"/messages?_limit=4\").then((data) => setMessagesPreview(data));\n    http(\"/posts\").then((data) => setAllPosts(data));\n\n    // Promise.all([\n    //   http(\"/friends?_limit=4\"),\n    //   http(\"/messages?_limit=4\"),\n    //   http(\"/posts\")\n    // ]).then((data) => console.log(data[0]))\n  }, []);\n\n  return (\n    <section className={styles.home}>\n      <h3>Bevenuto utente</h3>\n      <div className={styles.grid}>\n        <aside>\n          {friendsPreview.map((friend, index) => (\n            <FriendPreview key={index} data={friend} />\n          ))}\n        </aside>\n        <main>\n          {allPosts.map((post, index) => (\n            <Post key={index} data={post} />\n          ))}\n        </main>\n        <aside>\n          {messagesPreview.map((message, index) => (\n            <MessagePreview key={index} data={message} />\n          ))}\n        </aside>\n      </div>\n    </section>\n  );\n};\n\nexport default Home;\n","import { useReducer } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport CreatePost from \"./components/CreatePost\";\n\nimport Home from \"./pages/Home\";\n\nconst INIT_STATE = {\n  name: \"Feisbrut\",\n  nav: [\n    { link: \"/\", label: \"Home\" },\n    { link: \"/new-post\", label: \"Create new post\" },\n    { link: \"/messages\", label: \"Messages\" },\n    { link: \"/friends\", label: \"Friends\" },\n  ],\n  friendsPreview: [],\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"change-name\":\n      return { ...state, name: \"Feisbell\" };\n    default:\n      return state;\n  }\n};\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, INIT_STATE);\n\n  return (\n    <div>\n      <Header name={state.name} links={state.nav} />\n\n      <button onClick={() => dispatch({ type: \"change-name\" })}>\n        Cambia nome\n      </button>\n\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/new-post\" element={<CreatePost />} />\n        <Route path=\"/messages\" element={<h3>Messages</h3>} />\n        <Route path=\"/friends\" element={<h3>Friends</h3>} />\n      </Routes>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}