{"version":3,"sources":["pages/Friends/Friends.module.scss","components/Pagination/Pagination.module.scss","pages/Home/Home.module.scss","components/Header/Header.module.scss","components/CreatePost/CreatePost.module.scss","components/Post/Post.module.scss","components/Footer/Footer.module.scss","components/Modal/Modal.module.scss","components/FriendPreview/FriendPreview.module.scss","pages/Login/Login.module.scss","components/MessagePreview/MessagePreview.module.scss","components/Header/index.jsx","components/Footer/index.jsx","libs/http.js","components/Modal/index.jsx","components/CreatePost/index.jsx","pages/NewPost/index.jsx","pages/Messages/index.jsx","components/CreateFriend/index.jsx","components/FriendPreview/index.jsx","components/Pagination/index.jsx","libs/general.js","pages/Friends/index.jsx","pages/Login/index.jsx","components/MessagePreview/index.jsx","components/Post/index.jsx","pages/Home/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","props","name","links","link","label","CheckActive","resolved","useResolvedPath","useMatch","path","pathname","end","styles","active","className","header","style","fontFamily","font","map","item","index","to","Footer","year","Date","getFullYear","footer","BASE_URL","http","resource","fetch","then","response","json","httpPOST","data","method","headers","body","JSON","stringify","Modal","bgColor","text","background","CreatePost","useState","authorInput","setAuthorInput","imgInput","setImgInput","messageInput","setMessageInput","formPostObj","setFormPostObj","isModalVisible","setModalVisibile","useEffect","author","date","toISOString","photo","createPost","__author","value","onChange","e","target","id","type","placeholder","required","onClick","event","preventDefault","setTimeout","cols","rows","NewPost","Messages","CreateFriend","friendName","setFriendName","friendPhoto","setFriendPhoto","isModalVisibile","createFriend","__friend","FriendPreview","friend","src","alt","Pagination","numOfElements","setActualButtonNum","totButtonNum","setTotButtonNum","friendsList","Math","ceil","length","paginationList","__prevAndNext","Array","keys","Friends","actualFriendsList","setActualFriendsList","actualButtonNum","__friendsList","__pagination","Login","userName","setUserName","password","setPassword","userData","setUserData","console","log","MessagePreview","sender","message","formatDistance","addSuffix","locale","it","Post","post","window","location","href","deleteBtn","friends","messages","posts","Home","friendsPreview","setFriendsPreview","allPosts","setAllPosts","messagesPreview","setMessagesPreview","reverse","home","grid","createPostBtn","INIT_STATE","nav","reducer","state","action","App","useReducer","dispatch","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,aAAe,gC,gBCAnHD,EAAOC,QAAU,CAAC,eAAiB,mCAAmC,cAAgB,oC,gBCAtFD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,cAAgB,4BAA4B,OAAS,uB,iBCA3HD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,yB,gBCA3DD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,SAAW,+B,kCCAzED,EAAOC,QAAU,CAAC,KAAO,mBAAmB,UAAY,0B,iBCAxDD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,OAAS,gC,gBCA3BD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,QAAU,kC,gKCkCbC,EAhCA,SAACC,GACd,IAAMC,EAAOD,EAAMC,MAAQ,MACrBC,EAAQF,EAAME,OAAS,CAAC,CAAEC,KAAM,IAAKC,MAAO,SAK5CC,EAAc,SAACF,GACnB,IAAMG,EAAWC,YAAgBJ,GAGjC,OAFcK,YAAS,CAAEC,KAAMH,EAASI,SAAUC,KAAK,IAExCC,IAAOC,OAAS,IAGjC,OACE,yBAAQC,UAAWF,IAAOG,OAA1B,UACE,oBAAIC,MAAO,CAAEC,WAAYjB,EAAMkB,MAA/B,SAAwCjB,IACxC,8BACE,6BACGC,EAAMiB,KAAI,SAACC,EAAMC,GAAP,OACT,6BACE,cAAC,IAAD,CAAMP,UAAWT,EAAYe,EAAKjB,MAAOmB,GAAIF,EAAKjB,KAAlD,SACGiB,EAAKhB,SAFDiB,c,iBCVNE,EAXA,WACb,IAAMC,GAAO,IAAIC,MAAOC,cAExB,OACE,yBAAQZ,UAAWF,IAAOe,OAA1B,UACE,uBACA,oDAAuBH,S,QCRvBI,EAAW,yCAEXC,EAAO,SAACC,GAAD,OACXC,MAAMH,EAAWE,GAAUE,MAAK,SAACC,GAAD,OAAcA,EAASC,WAEnDC,EAAW,SAACL,EAAUM,GAAX,OACfL,MAAMH,EAAWE,EAAU,CACzBO,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUL,KACpBJ,MAAK,SAACC,GAAD,OAAcA,EAASC,W,iBCFlBQ,EARD,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KACxB,OACE,qBAAK9B,UAAWF,IAAO8B,MAAO1B,MAAO,CAAE6B,WAAW,GAAD,OAAKF,IAAtD,SACE,4BAAIC,O,iBC0EKE,EAzEI,WACjB,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwCJ,mBAAS,IAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAsCN,mBAAS,IAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAA2CR,oBAAS,GAApD,mBAAOS,EAAP,KAAuBC,EAAvB,KAqBA,OATAC,qBAAU,WACRH,EAAe,CACbI,OAAQX,EACRJ,KAAMQ,EACNQ,MAAM,IAAInC,MAAOoC,cACjBC,MAAOZ,MAER,CAACF,EAAaE,EAAUE,IAGzB,sBAAKtC,UAAWF,IAAOmD,WAAvB,UACGP,GACC,cAAC,EAAD,CAAOb,QAAQ,eAAeC,KAAK,gCAGrC,iCACE,sBAAK9B,UAAWF,IAAOoD,SAAvB,UACE,uBACEC,MAAOjB,EACPkB,SAAU,SAACC,GAAD,OAAOlB,EAAekB,EAAEC,OAAOH,QACzChE,KAAK,SACLoE,GAAG,SACHC,KAAK,OACLC,YAAY,SACZC,UAAQ,IAGV,uBACEN,SAAU,SAACC,GAAD,OAAOhB,EAAYgB,EAAEC,OAAOH,QACtCA,MAAOf,EACPjD,KAAK,MACLoE,GAAG,MACHC,KAAK,OACLC,YAAY,YAGd,wBAAQD,KAAK,SAASG,QA9CR,SAACC,GACrBA,EAAMC,iBACNxC,EAAS,SAAUmB,GACnBG,GAAiB,GAEjBmB,YAAW,WACTnB,GAAiB,KAChB,MAuCG,qBAKF,0BACEQ,MAAOb,EACPc,SAAU,SAACC,GAAD,OAAOd,EAAgBc,EAAEC,OAAOH,QAC1ChE,KAAK,UACLoE,GAAG,UACHQ,KAAK,KACLC,KAAK,KACLP,YAAY,UACZC,UAAQ,WClEHO,EAJC,WACd,OAAO,cAAC,EAAD,KCIMC,EAJE,WACf,OAAO,+C,iBC2DMC,EA1DM,WACnB,MAAoClC,mBAAS,IAA7C,mBAAOmC,EAAP,KAAmBC,EAAnB,KACA,EAAsCpC,mBAAS,IAA/C,mBAAOqC,EAAP,KAAoBC,EAApB,KACA,EAAsCtC,mBAAS,IAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAA4CR,oBAAS,GAArD,mBAAOuC,EAAP,KAAwB7B,EAAxB,KAmBA,OAPAC,qBAAU,WACRH,EAAe,CACbtD,KAAMiF,EACNpB,MAAOsB,MAER,CAACF,EAAYE,IAGd,sBAAKtE,UAAWF,IAAO2E,aAAvB,UACGD,GACC,cAAC,EAAD,CAAO3C,QAAQ,aAAaC,KAAK,mCAEnC,+BACE,sBAAK9B,UAAWF,IAAO4E,SAAvB,UACE,uBACEvB,MAAOiB,EACPhB,SAAU,SAACC,GAAD,OAAOgB,EAAchB,EAAEC,OAAOH,QACxChE,KAAK,SACLoE,GAAG,SACHC,KAAK,OACLC,YAAY,cACZC,UAAQ,IAGV,uBACEN,SAAU,SAACC,GAAD,OAAOkB,EAAelB,EAAEC,OAAOH,QACzCA,MAAOmB,EACPnF,KAAK,QACLoE,GAAG,QACHC,KAAK,OACLC,YAAY,cAGd,wBAAQD,KAAK,SAASG,QA3CR,SAACC,GACrBA,EAAMC,iBACNxC,EAAS,WAAYmB,GAErBG,GAAiB,GACjBmB,YAAW,WACTnB,GAAiB,KAChB,MAoCG,0B,iBCpDJgC,EAAgB,SAACzF,GACrB,IAAMoC,EAAOpC,EAAMoC,MAAQ,CACzBnC,KAAM,SACN6D,MAAO,oDAGT,OACE,sBAAKhD,UAAWF,IAAO8E,OAAvB,UACE,qBAAKC,IAAKvD,EAAK0B,MAAO8B,IAAKxD,EAAKnC,OAChC,4BAAImC,EAAKnC,W,kCCkBA4F,EAxBI,SAAC,GAA4B,ICLxBC,EDKFC,EAAyB,EAAzBA,mBACpB,EAAwChD,mBAAS,IAAjD,mBAAOiD,EAAP,KAAqBC,EAArB,KAQA,OANAvC,qBAAU,WACR7B,EAAK,YAAYG,MAAK,SAACkE,GACrBD,EAAgBE,KAAKC,KAAKF,EAAYG,OAAS,WAKjD,qBAAIvF,UAAWF,IAAO0F,eAAtB,UACE,wBAAQxF,UAAWF,IAAO2F,cAA1B,0BChBkBT,EDiBFE,EChBb,YAAIQ,MAAMV,GAAeW,SDgBEtF,KAAI,SAACE,GAAD,OAChC,6BACE,wBAAQoD,QAAS,kBAAMsB,EAAmB1E,EAAQ,IAAlD,SACGA,EAAQ,KAFJA,MAMX,wBAAQP,UAAWF,IAAO2F,cAA1B,6BEYSG,EA3BC,WACd,MAAkD3D,mBAAS,IAA3D,mBAAO4D,EAAP,KAA0BC,EAA1B,KACA,EAA8C7D,mBAAS,GAAvD,mBAAO8D,EAAP,KAAwBd,EAAxB,KAQA,OANArC,qBAAU,WACR7B,EAAK,kBAAD,OAAmBgF,IAAmB7E,MAAK,SAACkE,GAAD,OAC7CU,EAAqBV,QAEtB,CAACW,IAGF,sBAAK/F,UAAWF,IAAO8F,QAAvB,UACE,cAAC,EAAD,IAEA,qBAAK5F,UAAWF,IAAOkG,cAAvB,SACGH,EAAkBxF,KAAI,SAACuE,GAAD,OACrB,cAAC,EAAD,CAAetD,KAAMsD,GAAaA,EAAOrB,SAI7C,qBAAKvD,UAAWF,IAAOmG,aAAvB,SACE,cAAC,EAAD,CAAYhB,mBAAoBA,U,iBCWzBiB,EAtCD,WACZ,IAQA,EAAgCjE,mBAAS,IAAzC,mBAAOkE,EAAP,KAAiBC,EAAjB,KACA,EAAgCnE,mBAAS,IAAzC,mBAAOoE,EAAP,KAAiBC,EAAjB,KACA,EAAgCrE,mBAAS,IAAzC,mBAAOsE,EAAP,KAAiBC,EAAjB,KAMA,OAJA5D,qBAAU,WACR6D,QAAQC,IAAIH,KACX,CAACA,IAGF,uBAAMvG,UAAWF,IAAOoG,MAAxB,UACE,uBACE/C,MAAOgD,EACP/C,SAAU,SAACC,GAAD,OAAO+C,EAAY/C,EAAEC,OAAOH,QACtCK,KAAK,OACLC,YAAY,WACZC,UAAQ,IAEV,uBACEP,MAAOkD,EACPjD,SAAU,SAACC,GAAD,OAAOiD,EAAYjD,EAAEC,OAAOH,QACtCK,KAAK,WACLC,YAAY,WACZC,UAAQ,IAEV,uBAAOC,QAhCU,SAACN,GACpBA,EAAEQ,iBACF2C,EAAY,CACVL,WACAE,cA4B8B7C,KAAK,SAASL,MAAM,c,iCChClDwD,EAAiB,SAACzH,GACtB,IAAMoC,EAAOpC,EAAMoC,MAAQ,CACzBQ,KAAM,cACNgB,KAAM,IAAInC,KACViG,OAAQ,QAGV,OACE,sBAAK5G,UAAWF,IAAO+G,QAAvB,UACE,6BAAKvF,EAAKsF,SACV,4BACE,gCACGE,YAAe,IAAInG,KAAKW,EAAKwB,MAAO,IAAInC,KAAQ,CAC/CoG,WAAW,EACXC,OAAQC,UAId,4BAAI3F,EAAKQ,W,iBCdToF,EAAO,SAAChI,GACZ,IAAMoC,EAAOpC,EAAMoC,MAAQ,CACzBuB,OAAQ,OACRf,KAAM,OACNgB,KAAM,IAAInC,KACVqC,MACE,kKAaJ,EAA2Cf,oBAAS,GAApD,mBAAOS,EAAP,KAAuBC,EAAvB,KAEA,OACE,0BAAS3C,UAAWF,IAAOqH,KAA3B,UACGzE,GACC,cAAC,EAAD,CAAOb,QAAQ,aAAaC,KAAK,+BAEnC,wBAAQ6B,QAjBa,WZHR,IAAC3C,KYIL,UAAD,OAAW9B,EAAMoC,KAAKiC,IZHlCtC,MAAMH,EAAWE,EAAU,CACzBO,OAAQ,SACRC,QAAS,CACP,eAAgB,sBAEjBN,MAAK,SAACC,GAAD,OAAcA,EAASC,WYFSF,MAAK,eAC3CyB,GAAiB,GAEjBmB,YAAW,WACTnB,GAAiB,GACjByE,OAAOC,SAASC,KAAO,MACtB,MAUkCtH,UAAWF,IAAOyH,UAArD,eAIA,6BAAKjG,EAAKuB,SACV,4BACE,gCACGiE,YAAe,IAAInG,KAAKW,EAAKwB,MAAO,IAAInC,KAAQ,CAC/CoG,WAAW,EACXC,OAAQC,UAId,4BAAI3F,EAAKQ,OAERR,EAAK0B,MAAQ,qBAAK6B,IAAKvD,EAAK0B,MAAO8B,IAAKxD,EAAKuB,SAAa,iC,kBCzC3D2E,GAAU,GAEVC,GAAW,GAEXC,GAAQ,GAyDCC,GAvDF,WACX,MAA4C1F,mBAASuF,IAArD,mBAAOI,EAAP,KAAuBC,EAAvB,KACA,EAAgC5F,mBAASyF,IAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KACA,EAA8C9F,mBAASwF,IAAvD,mBAAOO,EAAP,KAAwBC,EAAxB,KAuBA,OAhBArF,qBAAU,WAKR7B,EAAK,qBAAqBG,MAAK,SAACI,GAAD,OAAUuG,EAAkBvG,MAC3DP,EAAK,sBAAsBG,MAAK,SAACI,GAAD,OAAU2G,EAAmB3G,MAC7DP,EAAK,UAAUG,MAAK,SAACI,GAAD,OAAUyG,EAAYzG,EAAK4G,gBAO9C,IAGD,0BAASlI,UAAWF,KAAOqI,KAA3B,UACE,iDACA,sBAAKnI,UAAWF,KAAOsI,KAAvB,UACE,gCACGR,EAAevH,KAAI,SAACuE,EAAQrE,GAAT,OAClB,cAAC,EAAD,CAA2Be,KAAMsD,GAAbrE,QAGxB,iCACE,cAAC,IAAD,CAAMC,GAAG,YAAT,SACE,wBAAQR,UAAWF,KAAOuI,cAA1B,oCAIDP,EAASzH,KAAI,SAAC8G,EAAM5G,GAAP,OACZ,cAAC,EAAD,CAAkBe,KAAM6F,GAAb5G,SAGf,gCACGyH,EAAgB3H,KAAI,SAACwG,EAAStG,GAAV,OACnB,cAAC,EAAD,CAA4Be,KAAMuF,GAAbtG,eCjD3B+H,GAAa,CACjBnJ,KAAM,WACNoJ,IAAK,CACH,CAAElJ,KAAM,IAAKC,MAAO,QACpB,CAAED,KAAM,YAAaC,MAAO,YAC5B,CAAED,KAAM,WAAYC,MAAO,WAC3B,CAAED,KAAM,SAAUC,MAAO,UAE3BsI,eAAgB,GAChBzH,WAAY,IAGRqI,GAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOlF,MACb,IAAK,cACH,OAAO,2BAAKiF,GAAZ,IAAmBtJ,KAAM,cAC3B,IAAK,cACH,OAAO,2BAAKsJ,GAAZ,IAAmBtI,WAAY,UACjC,QACE,OAAOsI,IAiCEE,OA7Bf,WACE,MAA0BC,qBAAWJ,GAASF,IAA9C,mBAAOG,EAAP,KAAcI,EAAd,KAEA,OACE,gCACE,cAAC,EAAD,CAAQ1J,KAAMsJ,EAAMtJ,KAAMiB,KAAMqI,EAAMtI,WAAYf,MAAOqJ,EAAMF,MAE/D,wBACE5E,QAAS,WACPkF,EAAS,CAAErF,KAAM,gBACjBqF,EAAS,CAAErF,KAAM,iBAHrB,yBASA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO7D,KAAK,IAAImJ,QAAS,cAAC,GAAD,MACzB,cAAC,IAAD,CAAOnJ,KAAK,YAAYmJ,QAAS,cAAC,EAAD,MACjC,cAAC,IAAD,CAAOnJ,KAAK,YAAYmJ,QAAS,cAAC,EAAD,MACjC,cAAC,IAAD,CAAOnJ,KAAK,WAAWmJ,QAAS,cAAC,EAAD,MAChC,cAAC,IAAD,CAAOnJ,KAAK,SAASmJ,QAAS,cAAC,EAAD,SAGhC,cAAC,EAAD,QC/CSC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/H,MAAK,YAAkD,IAA/CgI,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.6b0cfa66.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Friends\":\"Friends_Friends__2IY9Z\",\"__friendsList\":\"Friends___friendsList__319r6\",\"__pagination\":\"Friends___pagination__Z3NJF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationList\":\"Pagination_paginationList__ru3We\",\"__prevAndNext\":\"Pagination___prevAndNext__2W61M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__1JXvv\",\"grid\":\"Home_grid__sUtIT\",\"createPostBtn\":\"Home_createPostBtn__1BGTQ\",\"friend\":\"Home_friend__eOEhP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\",\"active\":\"Header_active__3GX0s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createPost\":\"CreatePost_createPost__3XCbM\",\"__author\":\"CreatePost___author__2lcbm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3hqZB\",\"deleteBtn\":\"Post_deleteBtn__1bIB2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__7dIj9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__32mLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"FriendPreview_friend__3Gjby\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__2rkDV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"MessagePreview_message__3j9dl\"};","import { Link, useMatch, useResolvedPath } from \"react-router-dom\";\nimport styles from \"./Header.module.scss\";\n\nconst Header = (props) => {\n  const name = props.name || \"App\";\n  const links = props.links || [{ link: \"/\", label: \"Link\" }];\n\n  /* Versione \"custom\", si può ottenere lo stesso risultato anche solamente\n  usando il componente NavLink\n  https://reactrouter.com/docs/en/v6/api#navlink */\n  const CheckActive = (link) => {\n    const resolved = useResolvedPath(link);\n    const match = useMatch({ path: resolved.pathname, end: true });\n\n    return match ? styles.active : \"\";\n  };\n\n  return (\n    <header className={styles.header}>\n      <h1 style={{ fontFamily: props.font }}>{name}</h1>\n      <nav>\n        <ul>\n          {links.map((item, index) => (\n            <li key={index}>\n              <Link className={CheckActive(item.link)} to={item.link}>\n                {item.label}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import styles from \"./Footer.module.scss\";\n\nconst Footer = () => {\n  const year = new Date().getFullYear();\n\n  return (\n    <footer className={styles.footer}>\n      <hr />\n      <p>Copyright Edgemony {year}</p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","const BASE_URL = \"https://edgemony-backend.herokuapp.com\";\n\nconst http = (resource) =>\n  fetch(BASE_URL + resource).then((response) => response.json());\n\nconst httpPOST = (resource, data) =>\n  fetch(BASE_URL + resource, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then((response) => response.json());\n\nconst httpDELETE = (resource) =>\n  fetch(BASE_URL + resource, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n  }).then((response) => response.json());\n\n// Popola la lista degli amici, in base alla lista friendsNames\nconst fillFriendsList = (friendsNames) => {\n  let value = 0;\n  for (value in [...Array(friendsNames.length).keys()]) {\n    httpPOST(\"/friends\", {\n      name: friendsNames[value],\n      photo: `https://randomuser.me/api/portraits/men/${value}.jpg`,\n    });\n\n    setTimeout(() => {}, 100);\n  }\n};\n\nexport { http, httpPOST, httpDELETE, fillFriendsList };\n","import styles from \"./Modal.module.scss\";\n\nconst Modal = ({ bgColor, text }) => {\n  return (\n    <div className={styles.Modal} style={{ background: `${bgColor}` }}>\n      <p>{text}</p>\n    </div>\n  );\n};\n\nexport default Modal;\n","import { useState, useEffect } from \"react\";\nimport { httpPOST } from \"../../libs/http\";\n\nimport Modal from \"./../Modal\";\nimport styles from \"./CreatePost.module.scss\";\n\nconst CreatePost = () => {\n  const [authorInput, setAuthorInput] = useState(\"\");\n  const [imgInput, setImgInput] = useState(\"\");\n  const [messageInput, setMessageInput] = useState(\"\");\n  const [formPostObj, setFormPostObj] = useState({});\n  const [isModalVisible, setModalVisibile] = useState(false);\n\n  const handleSendBtn = (event) => {\n    event.preventDefault();\n    httpPOST(\"/posts\", formPostObj);\n    setModalVisibile(true);\n\n    setTimeout(() => {\n      setModalVisibile(false);\n    }, 3000);\n  };\n\n  useEffect(() => {\n    setFormPostObj({\n      author: authorInput,\n      text: messageInput,\n      date: new Date().toISOString(),\n      photo: imgInput,\n    });\n  }, [authorInput, imgInput, messageInput]);\n\n  return (\n    <div className={styles.createPost}>\n      {isModalVisible && (\n        <Modal bgColor=\"lightskyblue\" text=\"Il post è stato aggiunto\" />\n      )}\n\n      <form>\n        <div className={styles.__author}>\n          <input\n            value={authorInput}\n            onChange={(e) => setAuthorInput(e.target.value)}\n            name=\"author\"\n            id=\"author\"\n            type=\"text\"\n            placeholder=\"Author\"\n            required\n          />\n\n          <input\n            onChange={(e) => setImgInput(e.target.value)}\n            value={imgInput}\n            name=\"img\"\n            id=\"img\"\n            type=\"text\"\n            placeholder=\"Img URL\"\n          />\n\n          <button type=\"submit\" onClick={handleSendBtn}>\n            SEND\n          </button>\n        </div>\n\n        <textarea\n          value={messageInput}\n          onChange={(e) => setMessageInput(e.target.value)}\n          name=\"message\"\n          id=\"message\"\n          cols=\"30\"\n          rows=\"10\"\n          placeholder=\"Message\"\n          required\n        ></textarea>\n      </form>\n    </div>\n  );\n};\n\nexport default CreatePost;\n","import CreatePost from \"../../components/CreatePost\";\n\nconst NewPost = () => {\n  return <CreatePost />;\n};\n\nexport default NewPost;\n","// import { useState, useEffect } from \"react\";\n// import styles from \"./Messages.module.scss\";\n\nconst Messages = () => {\n  return <h1>Messagesssss</h1>;\n};\n\nexport default Messages;\n","import { useState, useEffect } from \"react\";\nimport { httpPOST } from \"../../libs/http\";\nimport Modal from \"./../Modal\";\nimport styles from \"./CreateFriend.module.scss\";\n\nconst CreateFriend = () => {\n  const [friendName, setFriendName] = useState(\"\");\n  const [friendPhoto, setFriendPhoto] = useState(\"\");\n  const [formPostObj, setFormPostObj] = useState({});\n  const [isModalVisibile, setModalVisibile] = useState(false);\n\n  const handleSendBtn = (event) => {\n    event.preventDefault();\n    httpPOST(\"/friends\", formPostObj);\n\n    setModalVisibile(true);\n    setTimeout(() => {\n      setModalVisibile(false);\n    }, 3000);\n  };\n\n  useEffect(() => {\n    setFormPostObj({\n      name: friendName,\n      photo: friendPhoto,\n    });\n  }, [friendName, friendPhoto]);\n\n  return (\n    <div className={styles.createFriend}>\n      {isModalVisibile && (\n        <Modal bgColor=\"lightgreen\" text=\"Hai un nuovo amico alla lista!\" />\n      )}\n      <form>\n        <div className={styles.__friend}>\n          <input\n            value={friendName}\n            onChange={(e) => setFriendName(e.target.value)}\n            name=\"friend\"\n            id=\"friend\"\n            type=\"text\"\n            placeholder=\"Friend name\"\n            required\n          />\n\n          <input\n            onChange={(e) => setFriendPhoto(e.target.value)}\n            value={friendPhoto}\n            name=\"photo\"\n            id=\"photo\"\n            type=\"text\"\n            placeholder=\"Photo URL\"\n          />\n\n          <button type=\"submit\" onClick={handleSendBtn}>\n            ADD\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateFriend;\n","import styles from \"./FriendPreview.module.scss\";\n\nconst FriendPreview = (props) => {\n  const data = props.data || {\n    name: \"Friend\",\n    photo: \"https://randomuser.me/api/portraits/women/59.jpg\",\n  };\n\n  return (\n    <div className={styles.friend}>\n      <img src={data.photo} alt={data.name} />\n      <p>{data.name}</p>\n    </div>\n  );\n};\n\nexport { FriendPreview };\n","import { useState, useEffect } from \"react\";\nimport { http } from \"./../../libs/http\";\nimport { arrayGenerator } from \"./../../libs/general\";\nimport styles from \"./Pagination.module.scss\";\n\nconst Pagination = ({ setActualButtonNum }) => {\n  const [totButtonNum, setTotButtonNum] = useState([]);\n\n  useEffect(() => {\n    http(`/friends`).then((friendsList) => {\n      setTotButtonNum(Math.ceil(friendsList.length / 10));\n    });\n  });\n\n  return (\n    <ul className={styles.paginationList}>\n      <button className={styles.__prevAndNext}>← Prev</button>\n      {arrayGenerator(totButtonNum).map((index) => (\n        <li key={index}>\n          <button onClick={() => setActualButtonNum(index + 1)}>\n            {index + 1}\n          </button>\n        </li>\n      ))}\n      <button className={styles.__prevAndNext}>Next →</button>\n    </ul>\n  );\n};\n\nexport default Pagination;\n","const arrayGenerator = (numOfElements) => {\n  return [...Array(numOfElements).keys()];\n};\n\nexport { arrayGenerator };\n","import { useState, useEffect } from \"react\";\nimport CreateFriend from \"../../components/CreateFriend\";\nimport { FriendPreview } from \"../../components/FriendPreview\";\n// import Pagination from \"./../../components/Pagination\";\nimport { http } from \"../../libs/http\";\nimport styles from \"./Friends.module.scss\";\n\nimport Pagination from \"../../components/Pagination\";\n\nconst Friends = () => {\n  const [actualFriendsList, setActualFriendsList] = useState([]);\n  const [actualButtonNum, setActualButtonNum] = useState(1);\n\n  useEffect(() => {\n    http(`/friends?_page=${actualButtonNum}`).then((friendsList) =>\n      setActualFriendsList(friendsList)\n    );\n  }, [actualButtonNum]);\n\n  return (\n    <div className={styles.Friends}>\n      <CreateFriend />\n\n      <div className={styles.__friendsList}>\n        {actualFriendsList.map((friend) => (\n          <FriendPreview data={friend} key={friend.id} />\n        ))}\n      </div>\n\n      <div className={styles.__pagination}>\n        <Pagination setActualButtonNum={setActualButtonNum} />\n      </div>\n    </div>\n  );\n};\n\nexport default Friends;\n","import { useState, useEffect } from \"react\";\nimport styles from \"./Login.module.scss\";\n\nconst Login = () => {\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setUserData({\n      userName,\n      password,\n    });\n  };\n\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [userData, setUserData] = useState({});\n\n  useEffect(() => {\n    console.log(userData);\n  }, [userData]);\n\n  return (\n    <form className={styles.Login}>\n      <input\n        value={userName}\n        onChange={(e) => setUserName(e.target.value)}\n        type=\"text\"\n        placeholder=\"Username\"\n        required\n      />\n      <input\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        type=\"password\"\n        placeholder=\"Password\"\n        required\n      />\n      <input onClick={handleSubmit} type=\"submit\" value=\"Login\" />\n    </form>\n  );\n};\n\nexport default Login;\n","import { formatDistance } from \"date-fns\";\nimport { it } from \"date-fns/locale\";\nimport styles from \"./MessagePreview.module.scss\";\n\nconst MessagePreview = (props) => {\n  const data = props.data || {\n    text: \"lorem ipsum\",\n    date: new Date(),\n    sender: \"User\",\n  };\n\n  return (\n    <div className={styles.message}>\n      <h5>{data.sender}</h5>\n      <p>\n        <small>\n          {formatDistance(new Date(data.date), new Date(), {\n            addSuffix: true,\n            locale: it,\n          })}\n        </small>\n      </p>\n      <p>{data.text}</p>\n    </div>\n  );\n};\n\nexport { MessagePreview };\n","import { useState } from \"react\";\nimport { formatDistance } from \"date-fns\";\nimport { it } from \"date-fns/locale\";\nimport { httpDELETE } from \"../../libs/http\";\n\nimport Modal from \"./../Modal\";\nimport styles from \"./Post.module.scss\";\n\nconst Post = (props) => {\n  const data = props.data || {\n    author: \"User\",\n    text: \"text\",\n    date: new Date(),\n    photo:\n      \"https://images.unsplash.com/photo-1639512398860-be15f48100ea?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1024&q=80\",\n  };\n\n  const handleDeletePost = () => {\n    httpDELETE(`/posts/${props.data.id}`).then(() => {});\n    setModalVisibile(true);\n\n    setTimeout(() => {\n      setModalVisibile(false);\n      window.location.href = \"/\";\n    }, 3000);\n  };\n\n  const [isModalVisible, setModalVisibile] = useState(false);\n\n  return (\n    <article className={styles.post}>\n      {isModalVisible && (\n        <Modal bgColor=\"lightcoral\" text=\"Il post è stato rimosso\" />\n      )}\n      <button onClick={handleDeletePost} className={styles.deleteBtn}>\n        X\n      </button>\n\n      <h3>{data.author}</h3>\n      <p>\n        <small>\n          {formatDistance(new Date(data.date), new Date(), {\n            addSuffix: true,\n            locale: it,\n          })}\n        </small>\n      </p>\n      <p>{data.text}</p>\n\n      {data.photo ? <img src={data.photo} alt={data.author} /> : <></>}\n\n      {/*\n      Per gestire condizioni più complesse posso richiamare una funzione \n      \n      hasImage(data.photo) \n      */}\n    </article>\n  );\n};\n\nexport { Post };\n","import { useState, useEffect } from \"react\";\nimport { FriendPreview } from \"../../components/FriendPreview\";\nimport { MessagePreview } from \"../../components/MessagePreview\";\nimport { Post } from \"../../components/Post\";\nimport { http } from \"./../../libs/http\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./Home.module.scss\";\n\nconst friends = [];\n\nconst messages = [];\n\nconst posts = [];\n\nconst Home = () => {\n  const [friendsPreview, setFriendsPreview] = useState(friends);\n  const [allPosts, setAllPosts] = useState(posts);\n  const [messagesPreview, setMessagesPreview] = useState(messages);\n\n  // GETTER -> const friendPreview = [];\n  // SETTER -> friendPreview = [...]\n\n  // Esegui del codice quando il componente è inizializzato (montato in pagina)\n  // componentDidMount() --> simile a \"DOMContentLoaded\" ma solo per il componente\n  useEffect(() => {\n    // fetch(\"https://edgemony-backend.herokuapp.com/friends?_limit=4\")\n    //   .then((response) => response.json())\n    //   .then((data) => setFriendsPreview(data));\n\n    http(\"/friends?_limit=4\").then((data) => setFriendsPreview(data));\n    http(\"/messages?_limit=4\").then((data) => setMessagesPreview(data));\n    http(\"/posts\").then((data) => setAllPosts(data.reverse()));\n\n    // Promise.all([\n    //   http(\"/friends?_limit=4\"),\n    //   http(\"/messages?_limit=4\"),\n    //   http(\"/posts\")\n    // ]).then((data) => console.log(data[0]))\n  }, []);\n\n  return (\n    <section className={styles.home}>\n      <h3>Bevenuto utente</h3>\n      <div className={styles.grid}>\n        <aside>\n          {friendsPreview.map((friend, index) => (\n            <FriendPreview key={index} data={friend} />\n          ))}\n        </aside>\n        <main>\n          <Link to=\"/new-post\">\n            <button className={styles.createPostBtn}>\n              + Create a new post!\n            </button>\n          </Link>\n          {allPosts.map((post, index) => (\n            <Post key={index} data={post} />\n          ))}\n        </main>\n        <aside>\n          {messagesPreview.map((message, index) => (\n            <MessagePreview key={index} data={message} />\n          ))}\n        </aside>\n      </div>\n    </section>\n  );\n};\n\nexport default Home;\n","import { useReducer } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport NewPost from \"./pages/NewPost\";\nimport Messages from \"./pages/Messages\";\nimport Friends from \"./pages/Friends\";\nimport Login from \"./pages/Login\";\n\nimport Home from \"./pages/Home\";\n\nconst INIT_STATE = {\n  name: \"FeisBell\",\n  nav: [\n    { link: \"/\", label: \"Home\" },\n    { link: \"/messages\", label: \"Messages\" },\n    { link: \"/friends\", label: \"Friends\" },\n    { link: \"/login\", label: \"Login\" },\n  ],\n  friendsPreview: [],\n  fontFamily: \"\",\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"change-name\":\n      return { ...state, name: \"FeisBrutt\" };\n    case \"change-font\":\n      return { ...state, fontFamily: \"Arial\" };\n    default:\n      return state;\n  }\n};\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, INIT_STATE);\n\n  return (\n    <div>\n      <Header name={state.name} font={state.fontFamily} links={state.nav} />\n\n      <button\n        onClick={() => {\n          dispatch({ type: \"change-name\" });\n          dispatch({ type: \"change-font\" });\n        }}\n      >\n        Cambia nome\n      </button>\n\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/new-post\" element={<NewPost />} />\n        <Route path=\"/messages\" element={<Messages />} />\n        <Route path=\"/friends\" element={<Friends />} />\n        <Route path=\"/login\" element={<Login />} />\n      </Routes>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}